version: '3.9'

services:
  db:
    container_name: postgresql
    image: postgres:15.3-alpine3.18
    restart: always
    hostname: postgresql
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40

  redis_db:
    container_name: redis
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/var/lib/redis
    depends_on:
      - db
    ports:
      - "${REDIS_PORT}:6379"

  celery:
    container_name: celery
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    command: celery -A backend worker -l INFO
    env_file:
      - ../.env
    environment:
      - DB_HOST=postgresql
      - REDIS_HOST=redis_db
    depends_on:
      - redis_db
      - db

  celery-beat:
    container_name: celery-beat
    restart: always
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile
    command: celery -A backend beat -l INFO
    env_file:
      - ../.env
    environment:
      - DB_HOST=postgresql
      - REDIS_HOST=redis_db
    depends_on:
      - redis_db
      - db
      - celery

volumes:
  pgdata:
  media:
  static:
  redis-data:
