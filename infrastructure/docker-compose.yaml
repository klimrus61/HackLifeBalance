version: '3.9'

services:
  nginx:
    container_name: nginx
    image: nginx:1.25-alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/var/html/static/
      - media:/var/html/media/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/

  frontend:
    container_name: frontend
    image: nikityau/skillget-client:latest
    volumes:
      - frontend:/app/build/web/

  db:
    container_name: postgresql
    image: postgres:15.3-alpine3.18
    restart: always
    hostname: postgresql
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40

  backend:
    container_name: backend
    image: hack_backend
    build:
      context: ${PWD}
      dockerfile: docker/Dockerfile
    restart: always
    env_file: .env
    command: sh -c "
      python manage.py collectstatic --noinput &&
      python manage.py migrate &&
      gunicorn --workers=2 --threads=4 --worker-class=gthread --worker-connections=100 --worker-tmp-dir /dev/shm --bind 0.0.0.0:8000 backend.wsgi:application"
    volumes:
      - static:/app/django_static/
      - media:/app/django_media/
    depends_on:
      - db
      - frontend

  redis_db:
    container_name: redis
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/var/lib/redis
    depends_on:
      - db

  celery:
    container_name: celery
    image: skillgetrstu/learning_platform_rstu:latest
    command: celery -A backend worker -l INFO
    env_file:
      - .env
    environment:
      - DB_HOST=postgresql
    depends_on:
      - redis_db
      - db

  celery-beat:
    container_name: celery-beat
    restart: always
    image: skillgetrstu/learning_platform_rstu:latest
    command: celery -A backend beat -l INFO
    env_file:
      - .env
    environment:
      - DB_HOST=postgresql
    depends_on:
      - redis_db
      - db
      - celery

volumes:
  pgdata:
  media:
  static:
  redis-data:
  frontend:
    name: frontend
